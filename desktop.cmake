set(KRIT_BACKEND_NET Curl CACHE STRING "Net backend")

set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Werror")

# dynamic libs
find_library(OPENAL_LIB NAMES openal HINTS "${TOOLCHAIN_LIB_PATH}" REQUIRED CMAKE_FIND_ROOT_PATH_BOTH)
find_library(SDL_IMAGE_LIB NAMES libSDL2_image.a HINTS "${TOOLCHAIN_LIB_PATH}" REQUIRED CMAKE_FIND_ROOT_PATH_BOTH)
find_library(SDL_LIB NAMES libSDL2.a HINTS "${TOOLCHAIN_LIB_PATH}" REQUIRED CMAKE_FIND_ROOT_PATH_BOTH)
find_library(SDL_MAIN_LIB NAMES libSDL2main.a HINTS "${TOOLCHAIN_LIB_PATH}" REQUIRED CMAKE_FIND_ROOT_PATH_BOTH)

# static libs
find_library(CURL_LIB NAMES libcurl.a HINTS "${TOOLCHAIN_LIB_PATH}" REQUIRED CMAKE_FIND_ROOT_PATH_BOTH)
add_definitions(-DCURL_STATICLIB)
find_library(CRYPTO_LIB NAMES libcrypto.a HINTS "${TOOLCHAIN_LIB_PATH}" REQUIRED CMAKE_FIND_ROOT_PATH_BOTH)
find_library(SSL_LIB NAMES libssl.a HINTS "${TOOLCHAIN_LIB_PATH}" REQUIRED CMAKE_FIND_ROOT_PATH_BOTH)
find_library(FLAC_LIB NAMES libFLAC.a HINTS "${TOOLCHAIN_LIB_PATH}" REQUIRED CMAKE_FIND_ROOT_PATH_BOTH)
find_library(FREETYPE_LIB NAMES freetype freetype-6 HINTS "${TOOLCHAIN_LIB_PATH}" REQUIRED CMAKE_FIND_ROOT_PATH_BOTH)
find_library(HARFBUZZ_LIB NAMES harfbuzz HINTS "${TOOLCHAIN_LIB_PATH}" REQUIRED CMAKE_FIND_ROOT_PATH_BOTH)
find_library(JPEG_LIB NAMES libjpeg.a HINTS "${TOOLCHAIN_LIB_PATH}" REQUIRED CMAKE_FIND_ROOT_PATH_BOTH)
find_library(OGG_LIB NAMES libogg.a HINTS "${TOOLCHAIN_LIB_PATH}" REQUIRED CMAKE_FIND_ROOT_PATH_BOTH)
find_library(OPUS_LIB NAMES libopus.a HINTS "${TOOLCHAIN_LIB_PATH}" REQUIRED CMAKE_FIND_ROOT_PATH_BOTH)
find_library(PNG_LIB NAMES libpng.a HINTS "${TOOLCHAIN_LIB_PATH}" REQUIRED CMAKE_FIND_ROOT_PATH_BOTH)
find_library(SNDFILE_LIB NAMES libsndfile.a HINTS "${TOOLCHAIN_LIB_PATH}" REQUIRED CMAKE_FIND_ROOT_PATH_BOTH)
find_library(SQLITE3_LIB NAMES libsqlite3.a HINTS "${TOOLCHAIN_LIB_PATH}" REQUIRED CMAKE_FIND_ROOT_PATH_BOTH)
find_library(VORBIS_LIB NAMES vorbis HINTS "${TOOLCHAIN_LIB_PATH}" REQUIRED CMAKE_FIND_ROOT_PATH_BOTH)
find_library(VORBISENC_LIB NAMES vorbisenc HINTS "${TOOLCHAIN_LIB_PATH}" REQUIRED CMAKE_FIND_ROOT_PATH_BOTH)
find_library(YAML_LIB NAMES libyaml.a HINTS "${TOOLCHAIN_LIB_PATH}" REQUIRED CMAKE_FIND_ROOT_PATH_BOTH)
find_library(Z_LIB NAMES libz.a HINTS "${TOOLCHAIN_LIB_PATH}" REQUIRED CMAKE_FIND_ROOT_PATH_BOTH)
find_library(ZIP_LIB NAMES zip HINTS "${TOOLCHAIN_LIB_PATH}" REQUIRED CMAKE_FIND_ROOT_PATH_BOTH)
list(APPEND KRIT_LIBS
    ${OPENAL_LIB}
    ${OPENGL_LIBRARIES}
    ${KRIT_PLATFORM_LIBS}
)
list(APPEND KRIT_STATIC_LIBS
    ${CURL_LIB}
    ${SQLITE3_LIB}
    ${FREETYPE_LIB}
    ${HARFBUZZ_LIB}
    ${SDL_LIB}
    ${SDL_MAIN_LIB}
    ${SDL_IMAGE_LIB}
    ${PNG_LIB}
    ${JPEG_LIB}
    ${SNDFILE_LIB}
    ${VORBIS_LIB}
    ${VORBISENC_LIB}
    ${FLAC_LIB}
    ${OPUS_LIB}
    ${OGG_LIB}
    ${YAML_LIB}
    ${ZIP_LIB}
    ${SSL_LIB}
    ${CRYPTO_LIB}
    ${Z_LIB}
    ${KRIT_PLATFORM_STATIC_LIBS}
)
